- name: Create an instance
  hosts: localhost
  gather_facts: no
  vars:
      gcp_project: openshift-demo-320707
      gcp_cred_kind: serviceaccount
      gcp_cred_file: "/Users/champillon/SandBox/ansible-playground/gcp-key/openshift-demo-320707-46b48f11b55a.json"
      zone: "asia-southeast1-b"
      region: "asia-southeast1"
      image: "projects/rhel-cloud/global/images/rhel-8-v20220126"

  tasks:
    - name: create a disk
      gcp_compute_disk:
         name: 'tower-disk'
         size_gb: 50
         source_image: "{{ image }}"
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
      register: disk
    - name: create a address
      gcp_compute_address:
         name: 'tower-address'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
      register: address
    - name: create a firewall
      gcp_compute_firewall:
        name: 'tower-firewall'
        allowed:
          - ip_protocol: 'tcp'
            ports:
              - "80"
              - "443"
        target_tags:
          - http
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
           - https://www.googleapis.com/auth/compute
        state: present
    - name: create a instance
      gcp_compute_instance:
        state: present
        name: tower-vm
        machine_type: e2-standard-4
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        network_interfaces:
          - network: null # use default
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        tags:
          items:
            - http
      register: instance

    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=10 timeout=60

    - name: Add host to groupname
      add_host: hostname={{ address.address }} groupname=new_instances

- name: Install Ansible Tower
  hosts: new_instances
  connection: ssh
  become: True
  tasks:
    - name: Download Ansible Tower Setup
      get_url:
        url: http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz
        dest: /tmp/ansible-tower-setup-latest.tar.gz
    - name: Unzip Ansible Tower Setup
      command: tar -xvf /tmp/ansible-tower-setup-latest.tar.gz -C /tmp
    - name: Copy configuration file
      copy:
        src: tower
        dest: "/tmp/ansible-tower-setup-3.8.5-2/inventory"
    # - name: Run Installation
    #   become: true
    #   command: "sudo /tmp/ansible-tower-setup-3.8.5-2/setup.sh"
    #
    # change admin password command: tower-manage changepassword admin